{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAgCA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAClCC,EAAe,CAACL,WAAUC,SAE9B,OAAO,IAAIK,SAAQ,SAACC,EAASC,GACvBN,GACFK,EAAQF,GAERG,EAAOH,E,IAtCGI,SAASC,cAAc,SAC/BC,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAEC,iBAMF,IAJA,IAAIC,EAAQC,OAAOH,EAAEI,cAAcf,MAAMgB,OACnCC,EAAQH,OAAOH,EAAEI,cAAcE,KAAKD,OACpCE,EAASJ,OAAOH,EAAEI,cAAcG,OAAOF,OAEpCG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDrB,EAAcqB,EAAUN,GAErBO,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBsB,YAAW,WACT1B,EAAA2B,OAAOC,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,GAC3DA,E,IAIL0B,OAAM,SAAAL,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBsB,YAAW,WACT1B,EAAA2B,OAAOC,QAAQ,sBAAqCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,GACzDA,E,IAEPa,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix\";\n\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) { \n  e.preventDefault();\n\n  let delay = Number(e.currentTarget.delay.value);\n  const step =  Number(e.currentTarget.step.value);\n  const amount = Number(e.currentTarget.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      \n      .then(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n         }, delay)\n    \n  })\n      \n      .catch(({ position, delay }) => {\n        setTimeout(() => { \n          Notify.success(`❌ Rejected promise ${position} in ${delay}ms`);\n        }, delay)\n      });\n    delay += step;\n  }\n}\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  let promiseValue = {position, delay};\n\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(promiseValue);\n    }\n      reject(promiseValue);\n  })\n}\n\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","promiseValue","Promise","resolve","reject","document","querySelector","addEventListener","e","preventDefault","delay1","Number","currentTarget","value","step","amount","position1","then","param","setTimeout","Notify","success","concat","catch"],"version":3,"file":"03-promises.4ed2e85f.js.map"}